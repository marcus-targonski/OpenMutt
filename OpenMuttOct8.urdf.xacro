<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="openMutt">

  <!--UNITS IN m/kg/s (I think?)-->
  <xacro:property name="Zoffset" value="1" />
  <!-- DOG PARAMS -->
  <!--Body Stuff-->
  <xacro:property name="bodyLength" value=".752" />
  <xacro:property name="bodyWidth" value="0.13" />
  <xacro:property name="bodyHeight" value="0.159" />
  <xacro:property name="bodyMass" value="1" />

  <xacro:property name="bodyCrossLength" value=".302" />
  <xacro:property name="bodyCrossWidth" value="0.356" />
  <xacro:property name="bodyCrossHeight" value="0.159" />
  <xacro:property name="bodyCrossMass" value="0.4" />


  <!--Leg Stufddeezzxcxzcvdddddddrffv f-->
  <!--Hip Cylidner-->
  <xacro:property name="hipBearingRadius" value="0.03" />
  <xacro:property name="hipOffset" value="0.102" />
  <xacro:property name="hipCylinderLength" value="0.102" />
  <xacro:property name="hipCylinderRadius" value="0.03" />
  <xacro:property name="hipCylinderMass" value="0.2" />
  <xacro:property name="hipBearingLength" value="0.04" />


  <!--Upper-->
  <xacro:property name="upperLength" value="0.203" />
  <xacro:property name="upperRadius" value="0.035" />
  <xacro:property name="upperMass" value=".3" />


  <!--Lower-->
  <xacro:property name="lowerLength" value="0.165" />
  <xacro:property name="lowerRadius" value="0.015" />
  <xacro:property name="lowerMass" value=".3" />

  <!--Feet :)-->
  <xacro:property name="footRadius" value="0.032" />
  <xacro:property name="footMass" value="0.126" />

  <xacro:macro name="default_inertial" params="mass b w h">
      <inertial>
              <mass value="${mass}" />
              <inertia ixx="${(1/12)*mass*(w*w+h*h)}" ixy="0.0" ixz="0.0"
                   iyy="${(1/12)*mass*(b*b+h*h)}" iyz="0.0"
                   izz="${(1/12)*mass*(w*w+b*b)}" />
      </inertial>
  </xacro:macro>


  <!-- DAWG BODY -->
  <!-- DAWG BODY LAWNG -->
 <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 0"/>
      <geometry>
        <box size="${bodyLength} ${bodyWidth} ${bodyHeight}"/>
      </geometry>
      <material name="c">
        <color rgba="0 0.9 0.9 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 0"/>
      <geometry>
        <box size="${bodyLength} ${bodyWidth} ${bodyHeight}"/>
      </geometry>
    </collision>
  </link>

  <link name="faux_base_link">
      <inertial>
          <mass value="7" />
          <inertia ixx=".0246" ixy="0.0" ixz="0.0" iyy=".345" iyz="0.0" izz="1.0" />
          <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
  </link>

  <joint name="baseInertia" type="fixed">
      <parent link="base_link" />
      <child link="faux_base_link" />
      <origin rpy="0 0 0" xyz="0 0 0" />
  </joint>    
  
    <!-- DAWG BODY CHONK -->
  <link name="dogBodyCross">
    <xacro:default_inertial mass="${bodyCrossMass}" b="${bodyCrossLength}" w="${bodyCrossWidth}" h="${bodyCrossHeight}"/>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 0"/>
      <geometry>
        <box size="${bodyCrossLength} ${bodyCrossWidth} ${bodyCrossHeight}"/>
      </geometry>
      <material name="c">
        <color rgba="0 0.9 0.9 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <axis xyz="0 0 0"/>
      <geometry>
        <box size="${bodyCrossLength} ${bodyCrossWidth} ${bodyCrossHeight}"/>
      </geometry>
    </collision>
  </link>

  <joint name="DawgBodyMaker" type="fixed">
    <parent link="base_link"/>
    <child link="dogBodyCross"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  

  <xacro:macro name="upperLegAssem" params="prefix xReflect yReflect">
    <!--prefix is the legnumber, xReflext is  a 1 or -1 and same with yReflect this just mkaes it swtich locations for all 4 quadrents but why are you reading this is you arent me, if youre this deep in you got yourself in trouble run before its too late... I mean seriously I am writing an essay here stop scrolling to the side just keep reading the code and ignore the comments or I guess this one, some are helpful this one was until you got too nosy-->
    <link name="${prefix}HipBoxJointBearing">
      <xacro:default_inertial mass=".001" b="${hipBearingLength}" w="${hipBearingRadius}" h="${hipBearingRadius}"/>
      <visual>
        <origin rpy="0 1.5809  0" xyz="${xReflect*bodyCrossLength/2} ${yReflect*hipOffset} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipBearingLength}" radius="${hipBearingRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 1.5809  0" xyz="${xReflect*bodyCrossLength/2} ${yReflect*hipOffset} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipBearingLength}" radius="${hipBearingRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}BodyHipBoxFixedBearing" type="fixed">
      <parent link="dogBodyCross"/>
      <child link="${prefix}HipBoxJointBearing"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <!--X rotator allows for internal and external rotation-->
    <link name="${prefix}HipRotateX">
      <xacro:default_inertial mass=".3" b="${hipCylinderLength}" w="${hipBearingRadius}" h="${hipBearingRadius}"/>
      <visual>
        <origin rpy="0 1.5809 0" xyz="${xReflect*((bodyCrossLength/2)+(hipCylinderLength/2)+(hipBearingLength))} 0 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength}" radius="${hipBearingRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 1.5809 0" xyz="${xReflect*((bodyCrossLength/2)+(hipCylinderLength/2)+(hipBearingLength))} 0 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength}" radius="${hipBearingRadius}"/>
        </geometry>
      </collision>
    </link>

    <!--Joint from This Bone to the Main Body-->
    <joint name="${prefix}HipRotateXJoint" type="revolute">
      <parent link="${prefix}HipBoxJointBearing"/>
      <child link="${prefix}HipRotateX"/>
      <origin rpy="0 0 0" xyz="0 ${yReflect*hipOffset} 0"/>
      <axis xyz="1 0 0"/>
      <limit effort="150" lower="-3.14159265359" upper="3.14159265359" velocity="1.5"/>
    </joint>
    <!--GazeboControls-->
    <transmission name="${prefix}tran1">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}HipRotateXJoint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}motor1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!--Time to construct the hip box, makes me want to throw thousands into the march madness tournament, it will end differently this time I swear, massive value in the next Kentucky points over-->

    <!--Y block-->
    <link name="${prefix}HipYBlock">
      <xacro:default_inertial mass=".001" b="${hipBearingRadius*2}" w="${hipCylinderRadius}" h="${hipCylinderRadius}"/>
      <visual>
        <origin rpy="1.5809 0 0" xyz="${xReflect*((bodyCrossLength/2)+hipCylinderLength)} 0 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipBearingRadius*2}" radius="${hipCylinderRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="${xReflect*((bodyCrossLength/2)+hipCylinderLength)} 0 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipBearingRadius*2}" radius="${hipCylinderRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}BodyHipBoxYAttach" type="fixed">
      <parent link="${prefix}HipRotateX"/>
      <child link="${prefix}HipYBlock"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <!--Y rotator allows for elevation and declanation rotation-->
    <link name="${prefix}HipRotateY">
      <xacro:default_inertial mass=".5" b="${hipCylinderLength+(upperRadius*2)}" w="${hipCylinderRadius}" h="${hipCylinderRadius}"/>
      <visual>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius)} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength+(upperRadius*2)}" radius="${hipCylinderRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius)} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength}" radius="${hipCylinderRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}HipRotateYJoint" type="revolute">
      <origin rpy="0 0 0" xyz="${xReflect*((bodyCrossLength/2)+hipCylinderLength)} ${yReflect*(hipCylinderLength/2)} 0"/>
      <parent link="${prefix}HipYBlock"/>
      <child link="${prefix}HipRotateY"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" lower="-3.14159265359" upper="3.14159265359" velocity="1.5"/>
    </joint>
    <!--GazeboControls-->
    <transmission name="${prefix}tran2">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}HipRotateYJoint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}motor2">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>


    <!--  hip bone is like the femur   -->
    <link name="${prefix}Femur">
      <xacro:default_inertial mass="${upperMass}" b="${upperLength}" w="${upperRadius}" h="${upperRadius}"/>
      <visual>
        <origin rpy="0 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} ${-upperLength/2}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${upperLength}" radius="${upperRadius}"/>
        </geometry>
        <material name="Cyan2">
          <color rgba="0.4 0.2 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} ${-upperLength/2}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${upperLength}" radius="${upperRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}FemurToHip" type="fixed">
      <parent link="${prefix}HipRotateY"/>
      <child link="${prefix}Femur"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

  <!--knee clevis-->
    <link name="${prefix}KneeClevis">
      <xacro:default_inertial mass=".0001" b="${hipCylinderLength/4}" w="${hipCylinderRadius}" h="${hipCylinderRadius}"/>
      <visual>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength+hipCylinderLength/8)} ${-upperLength}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength/4}" radius="${hipCylinderRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength+hipCylinderLength/8)} ${-upperLength}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength/4}" radius="${hipCylinderRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}KneeClevisFix" type="fixed">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <parent link="${prefix}Femur"/>
      <child link="${prefix}KneeClevis"/>
    </joint>

  <!--knee!-->
    <link name="${prefix}Knee">
      <xacro:default_inertial mass=".01" b="${hipCylinderLength}" w="${hipCylinderRadius}" h="${hipCylinderRadius}"/>
      <visual>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength}" radius="${hipCylinderRadius}"/>
        </geometry>
        <material name="Cyan1">
          <color rgba="0.3 0.15 0.9 1.0"/>
        </material>
      </visual>
      <collision>
        <origin rpy="1.5809 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} 0"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${hipCylinderLength}" radius="${hipCylinderRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}KneeJoint" type="revolute">
      <origin rpy="0 0 0" xyz="0 0 ${-upperLength}"/>
      <parent link="${prefix}KneeClevis"/>
      <child link="${prefix}Knee"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" lower="-3.14159265359" upper="3.14159265359" velocity="1.5"/>
    </joint>

    <!--GazeboControls-->
    <transmission name="${prefix}tran3">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}KneeJoint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}motor3">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

  <!--Shin!-->
  <link name="${prefix}Shin">
    <xacro:default_inertial mass="${lowerMass}" b="${lowerLength}" w="${lowerRadius}" h="${lowerRadius}"/>
      <visual>
        <origin rpy="0 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} ${-(lowerLength/2)}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${lowerLength}" radius="${lowerRadius}"/>
        </geometry>
        <material name="Green">
          <color rgba="0 1 0 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} ${-(lowerLength/2)}"/>
        <axis xyz="0 0 0"/>
        <geometry>
          <cylinder length="${lowerLength}" radius="${lowerRadius}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}KneeToShin" type="fixed">
      <parent link="${prefix}Knee"/>
      <child link="${prefix}Shin"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <!--FOOOOOOT-->
    <link name="${prefix}Foot">
      <xacro:default_inertial mass="${footMass}" b=".032" w=".032" h=".032"/>
      <visual>
        <origin rpy="0 0 0" xyz="0 ${yReflect*(hipBearingRadius+hipCylinderLength/2)} 0"/>
        <geometry>
          <sphere radius="${footRadius}"/>
        </geometry>
        <material name="Green">
          <color rgba="0 1 0 1"/>
        </material>
      </visual>
      <collision>
      </collision>
    </link>

    <gazebo reference="${prefix}Shin">
      <kp>1000000.0</kp>
      <kd>1.0</kd>
      <mu1>.8</mu1>
      <mu2>.8</mu2>
      <maxVel>0.0</maxVel>
      <minDepth>0.003</minDepth>
    </gazebo>

    <joint name="${prefix}ShinToFoot" type="fixed">
      <parent link="${prefix}Shin"/>
      <child link="${prefix}Foot"/>
      <origin rpy="0 0 ${footRadius/2}" xyz="0 0 ${-lowerLength-(footRadius/2)}"/>
    </joint>



  </xacro:macro>

  <xacro:upperLegAssem prefix="frontRight" xReflect="1" yReflect="-1" />
  <xacro:upperLegAssem prefix="frontLeft" xReflect="1" yReflect="1" />
  <xacro:upperLegAssem prefix="backRight" xReflect="-1" yReflect="-1" />
  <xacro:upperLegAssem prefix="backLeft" xReflect="-1" yReflect="1" />



  <gazebo>
      <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
          <legacyModeNS>true</legacyModeNS>
      </plugin>
  </gazebo>

  <link name="hokuyo_frame">
      <inertial>
      <mass value="0.270"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="2.632e-4" ixy="0" ixz="0" iyy="2.632e-4" iyz="0" izz="1.62e-4"/>
      </inertial>
      <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
          <mesh filename="package://hector_sensors_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.dae"/>
      </geometry>
      </visual>
      <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.0115"/>
      <geometry>
          <box size="0.058 0.058 0.087"/>
          <!--<mesh filename="package://hector_sensors_description/meshes/hokuyo_utm30lx/hokuyo_utm_30lx.stl"/>-->
      </geometry>
      </collision>
  </link>
  <joint name="hokuyo_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.4 0.0 0.2"/>
      <parent link="base_link"/>
      <child link="hokuyo_frame"/>
  </joint>
  <gazebo reference="hokuyo_frame">
      <sensor name="hokuyo" type="ray">
      <always_on>true</always_on>
      <update_rate>30</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
          <scan>
          <horizontal>
              <samples>1040</samples>
              <resolution>1</resolution>
              <min_angle>2.26892802759</min_angle>
              <max_angle>-2.26892802759</max_angle>
          </horizontal>
          </scan>
          <range>
          <min>0.2</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
          </range>
          <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.004</stddev>
          </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_hokuyo_controller">
          <topicName>scan</topicName>
          <frameName>hokuyo_frame</frameName>
      </plugin>
      </sensor>
  </gazebo>
  <joint name="camera_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.45 0.0 .1"/>
      <parent link="base_link"/>
      <child link="camera_link"/>
  </joint>
  <link name="camera_link">
      <inertial>
      <mass value="0.200"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="5.8083e-4" ixy="0" ixz="0" iyy="3.0833e-5" iyz="0" izz="5.9083e-4"/>
      </inertial>
      <visual>
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
              <mesh filename="package://hector_sensors_description/meshes/asus_camera/asus_camera_simple.dae"/>
          </geometry>
      </visual>
      <!--        
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
              <box size="0.035 0.185 0.025"/>
          </geometry>
          </collision>
          -->
      <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
          <mesh filename="package://hector_sensors_description/meshes/asus_camera/asus_camera_simple.dae"/>
      </geometry>
      </collision>
  </link>
  <joint name="camera_depth_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.0 0.049 0.0"/>
      <parent link="camera_link"/>
      <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
      <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
      <parent link="camera_depth_frame"/>
      <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
  <joint name="camera_rgb_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0.0 0.022 0.0"/>
      <parent link="camera_link"/>
      <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
      <origin rpy="-1.57079632679 0.0 -1.57079632679" xyz="0 0 0"/>
      <parent link="camera_rgb_frame"/>
      <child link="camera_rgb_optical_frame"/>
  </joint>
<link name="camera_rgb_optical_frame"/>
<!-- ASUS Xtion PRO camera for simulation -->
  <gazebo reference="camera_depth_frame">
      <sensor name="camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
          <horizontal_fov>1.09606677025</horizontal_fov>
          <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
          </image>
          <clip>
              <near>0.5</near>
              <far>9</far>
          </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_camera_controller">
          <imageTopicName>camera/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
          <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
          <frameName>camera_depth_optical_frame</frameName>
      </plugin>
      </sensor>
  </gazebo>
  
  <gazebo>
      <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
  </gazebo>
  <link name="imu_link">
      <inertial>
          <mass value="0.001"/>
          <origin rpy="0 0 0" xyz="0 0 0"/>
          <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09"/>
      </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
      <parent link="base_link"/>
      <child link="imu_link"/>
  </joint>



  <gazebo>
      <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>10.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>odom/ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      </plugin>
  </gazebo>




</robot>



